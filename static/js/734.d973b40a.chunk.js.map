{"version":3,"file":"static/js/734.d973b40a.chunk.js","mappings":"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","sources":["layouts/SiteLayout.jsx"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport '../App.css';\r\nconst About = lazy(() => import('../pages/About'));\r\nconst Home = lazy(() => import('../pages/Home'));\r\nconst Contact = lazy(() => import('../pages/Contact'));\r\nconst Sitemap = lazy(() => import('../pages/Sitemap'));\r\nconst MarketPlace = lazy(() => import('../pages/MarketPlace'));\r\nconst Products = lazy(() => import('../pages/Products'));\r\nconst ProductDetail = lazy(() => import('../pages/ProductDetail'));\r\nconst ProductList = lazy(() => import('../components/sections/ProductList'));\r\nconst Subdomain = lazy(() => import('../pages/Subdomain'));\r\nconst OurPresenceInCity = lazy(() => import('../pages/OurPresenceInCity'));\r\nconst KeywordInCity = lazy(() => import('../pages/KeywordInCity'));\r\n\r\nfunction SiteLayout() {\r\n\r\n  const [products, setProduct] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n  const [promotionalCategories, setPromotionalCategories] = useState([]);\r\n\r\n  const getProducts = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}products`);\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setProduct(result.products);\r\n    }\r\n  }\r\n\r\n  const getMarketPlace = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}marketPlace`);\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setLocations(result.data.locations);\r\n      setPromotionalCategories(result.data.promotionalCategories);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    getMarketPlace();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {/* <Nav></Nav> */}\r\n      <Routes>\r\n        <Route path='/' element={<Suspense fallback={<Skeleton count={15} />}><Home /></Suspense>} />\r\n        <Route path='/services' element={<Suspense fallback={<Skeleton count={15} />}><Products /></Suspense>} />\r\n        <Route path='/company-profile' element={<Suspense fallback={<Skeleton count={15} />}><About /></Suspense>} />\r\n        <Route path='/contact' element={<Suspense fallback={<Skeleton count={15} />}><Contact /></Suspense>} />\r\n        <Route path='/sitemap' element={<Suspense fallback={<Skeleton count={15} />}><Sitemap /></Suspense>} />\r\n        <Route path='/market-place' element={<Suspense fallback={<Skeleton count={15} />}><MarketPlace /></Suspense>} />\r\n        <Route path='/product-details' element={<Suspense fallback={<Skeleton count={15} />}><ProductDetail  /></Suspense>} />\r\n        <Route path='/google35da33f130a69c13.html' element=\"google-site-verification: google35da33f130a69c13.html\" />\r\n        {\r\n          products\r\n            ?\r\n            products.map((value, index) =>\r\n              <Route key={index} path={'/' + value.slug} element={<Suspense fallback={<Skeleton count={15} />}><ProductDetail slug={value.slug} /></Suspense>} />\r\n            )\r\n            :\r\n            null\r\n        }\r\n        {\r\n          promotionalCategories\r\n            ?\r\n            promotionalCategories.map((value, index) =>\r\n              <>\r\n                <Route\r\n                  key={index}\r\n                  path={'/' + value.slug}\r\n                  element={<Suspense fallback={<Skeleton count={15} />}><ProductList slug={value.slug} /></Suspense>}\r\n                />\r\n                {\r\n                  products\r\n                    ?\r\n                    products.map((item, key) =>\r\n                      <Route\r\n                        key={key}\r\n                        path={'/' + value.slug + \"/\" + item.slug}\r\n                        element={<Suspense fallback={<Skeleton count={15} />}><Subdomain categorySlug={value.slug} productSlug={item.slug} /></Suspense>}\r\n                      />\r\n                    )\r\n                    :\r\n                    null\r\n                }\r\n              </>\r\n            )\r\n            :\r\n            null\r\n        }\r\n        {\r\n          locations\r\n            ?\r\n            locations.map((value, index) =>\r\n              <>\r\n                <Route key={index} path={'/' + value.parentSlug} element={<Suspense fallback={<Skeleton count={15} />}><OurPresenceInCity slug={value.parentSlug} /></Suspense>} />\r\n                {\r\n                  products\r\n                    ?\r\n                    products.map((item, key) =>\r\n                      <Route\r\n                        key={key}\r\n                        path={'/' + value.parentSlug + '/' + item.slug}\r\n                        element={\r\n                          <Suspense fallback={<Skeleton count={15} />}>\r\n                            <KeywordInCity\r\n                              locationSlug={value.parentSlug}\r\n                              productSlug={item.slug}\r\n                            />\r\n                          </Suspense>\r\n                        }\r\n                      />\r\n                    )\r\n                    :\r\n                    null\r\n                }\r\n                {\r\n                  value.cities.map((item, key) =>\r\n                    <>\r\n                      <Route key={key} path={'/' + item.slug} element={\r\n                        <Suspense fallback={<Skeleton count={15} />}>\r\n                          <OurPresenceInCity slug={item.slug} />\r\n                        </Suspense>\r\n                      } />\r\n                      {\r\n                        products\r\n                          ?\r\n                          products.map((val, i) =>\r\n                            <Route\r\n                              key={i}\r\n                              path={'/' + item.slug + '/' + val.slug}\r\n                              element={\r\n                                <Suspense fallback={<Skeleton count={15} />}>\r\n                                  <KeywordInCity\r\n                                    locationSlug={item.slug}\r\n                                    productSlug={val.slug}\r\n                                  />\r\n                                </Suspense>\r\n                              }\r\n                            />\r\n                          )\r\n                          :\r\n                          null\r\n                      }\r\n                    </>\r\n                  )\r\n                }\r\n              </>\r\n            )\r\n            :\r\n            null\r\n        }\r\n      </Routes>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SiteLayout"],"names":["About","lazy","Home","Contact","Sitemap","MarketPlace","Products","ProductDetail","ProductList","Subdomain","OurPresenceInCity","KeywordInCity","products","setProduct","useState","locations","setLocations","promotionalCategories","setPromotionalCategories","useEffect","async","result","fetch","concat","process","json","status","getProducts","data","getMarketPlace","_jsx","_Fragment","children","_jsxs","Routes","Route","path","element","Suspense","fallback","Skeleton","count","map","value","index","slug","item","key","categorySlug","productSlug","parentSlug","locationSlug","cities","val","i"],"sourceRoot":""}