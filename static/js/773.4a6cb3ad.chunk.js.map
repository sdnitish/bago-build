{"version":3,"file":"static/js/773.4a6cb3ad.chunk.js","mappings":"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","sources":["components/HelmetComp.jsx","components/sections/BreadCrumb.jsx","components/sections/CompanyProfile.jsx","pages/About.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Parser } from 'html-to-react'\r\n\r\nconst HelmetComp = (props) => {\r\n\r\n    const [siteInfo, setSiteInfo] = useState([]);\r\n\r\n    const getSiteInfo = async () => {\r\n        let result = await fetch(`${process.env.REACT_APP_BASE_URL}siteInfo`);\r\n        result = await result.json();\r\n        if (result.status) {\r\n            setSiteInfo(result.siteInfo);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSiteInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <Helmet>\r\n            <link href={process.env.REACT_APP_BASE_URL + 'images/' + siteInfo.favicon} rel=\"shortcut icon\" type=\"image/png\" />\r\n            {Parser().parse(siteInfo.googleAnalytic)}\r\n            <title>{props.metaData.metaTitle}</title>\r\n            <meta name=\"keywords\" content={props.metaData.metaKeywords} />\r\n            <meta name=\"description\" content={props.metaData.metaDescription} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default HelmetComp\r\n","import React from 'react';\r\nimport './BreadCrumb.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BreadCrumb = (props) => {\r\n  return (\r\n    <section className='bread-crumb'>\r\n      <div className='container'>\r\n      <h1>{props.name ? props.name : null}</h1>\r\n        <div className='page-title-box'>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><span><i className=\"fa-solid fa-angles-right\"></i></span></li>\r\n                <li><span>{props.name ? props.name : null}</span></li>\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BreadCrumb\r\n","import React, { useEffect, useState } from 'react';\r\nimport './CompanyProfile.css';\r\nimport { LoremIpsum } from 'react-lorem-ipsum';\r\nimport { Parser } from 'html-to-react'\r\nimport SectionTitle from '../SectionTitle';\r\nimport BtnLink from '../BtnLink';\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport ModalVideo from 'react-modal-video';\r\n\r\n\r\nconst CompanyProfile = (props) => {\r\n\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [siteInfo, setSiteInfo] = useState([]);\r\n\r\n  const boxVariant = {\r\n    visible: { opacity: 1, scale: 1, translateX: 0, transition: { duration: 0.5 } },\r\n    hidden: { opacity: 0.25, scale: 0.85, translateX: -180 },\r\n  }\r\n\r\n  const control = useAnimation()\r\n  const [ref, inView] = useInView()\r\n  useEffect(() => {\r\n    getSiteInfo();\r\n    if (inView) {\r\n      control.start(\"visible\");\r\n    }\r\n    else {\r\n      control.start(\"hidden\");\r\n    }\r\n  }, [control, inView]);\r\n\r\n  const getSiteInfo = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}siteInfo`);\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setSiteInfo(result.siteInfo);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalVideo\r\n        channel=\"youtube\"\r\n        youtube={{ mute: 0, autoplay: 1, theme: \"dark\" }}\r\n        isOpen={isOpen}\r\n        videoId=\"-vPON-2pEXg?si=zRK4aAWaCjMBHiZW\"\r\n        onClose={() => setOpen(false)}\r\n      />\r\n        <section className=\"about-section\">\r\n        {/* <div className='about-left-shape anim-up-down'><img src=\"images/shapes/about-left-shape.svg\" alt=\"\" /></div>\r\n        <div className='about-right-shape anim-scale'><img src=\"images/shapes/about-right-shape.svg\" alt=\"\" /></div> */}\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div \r\n             className='col-lg-6'>\r\n              <div>\r\n                <SectionTitle smTitle=\"About Company\" mainTitle=\"Company lorem ipsumt konilat diltavt\" />\r\n              </div>\r\n              <LoremIpsum p={3} />\r\n              <div className='row align-items-center mt-4'>\r\n                <BtnLink Href=\"\" btnName=\"Readmore\" />\r\n                <div className=\"abt-contact-content \">\r\n                  <div className=\"contact-icon\">\r\n                     <i className=\"fa-solid fa-phone-volume\"></i>\r\n                  </div>\r\n                  <div className=\"contact-text\">\r\n                    <span>Call Us Anytime</span>\r\n                    <a className=\"link\" href=\"\">+91 00000 00000</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n            <motion.div\r\n             ref={ref}\r\n             variants={boxVariant}\r\n             initial=\"hidden\"\r\n             animate={control}\r\n             className='col-lg-6 position-relative'>\r\n              <div className='abt-text-circle'>\r\n                <img className='img-one' loading='lazy' src=\"images/shapes/text-curved.png\" alt=\"\" />\r\n                <img className='img-two' loading='lazy' src=\"images/shapes/circle-shape.svg\" alt=\"\" />\r\n              </div>\r\n              <div className='abt-shape anim-left-right'><img loading='lazy' src=\"images/shapes/service-left-shape.svg\" alt=\"\" /></div>\r\n              <div className='row h-100 align-items-end'>\r\n                <div className='abt-left-img'>\r\n                  <img className='w-100' loading='lazy' src=\"images/img/abt.jpg\" alt=\"\" />\r\n                </div>\r\n                <img className='w-50' loading='lazy' src=\"images/img/abt1.jpg\" alt=\"\" />\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompanyProfile\r\n","import React, { useEffect, useState } from 'react';\r\nimport Nav from '../components/nav/Nav';\r\nimport CompanyProfile from '../components/sections/CompanyProfile';\r\nimport BreadCrumb from '../components/sections/BreadCrumb';\r\nimport ContactSect from '../components/sections/ContactSect';\r\nimport HelmetComp from '../components/HelmetComp';\r\nimport Footer from '../components/sections/Footer';\r\n\r\nconst About = () => {\r\n\r\n  const [aboutData, setAboutData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAboutData();\r\n  }, []);\r\n\r\n  const getAboutData = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}about`);\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setAboutData(result.about);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HelmetComp metaData={aboutData} />\r\n      <Nav />\r\n      <BreadCrumb name={aboutData.name} />\r\n      <CompanyProfile pageData={aboutData} />\r\n      <ContactSect />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About\r\n"],"names":["props","siteInfo","setSiteInfo","useState","useEffect","async","result","fetch","concat","process","json","status","getSiteInfo","_jsxs","Helmet","children","_jsx","href","favicon","rel","type","Parser","parse","googleAnalytic","metaData","metaTitle","name","content","metaKeywords","metaDescription","className","Link","to","isOpen","setOpen","control","useAnimation","ref","inView","useInView","start","_Fragment","ModalVideo","channel","youtube","mute","autoplay","theme","videoId","onClose","SectionTitle","smTitle","mainTitle","LoremIpsum","p","BtnLink","Href","btnName","motion","div","variants","visible","opacity","scale","translateX","transition","duration","hidden","initial","animate","loading","src","alt","About","aboutData","setAboutData","getAboutData","about","HelmetComp","Nav","BreadCrumb","CompanyProfile","pageData","ContactSect","Footer"],"sourceRoot":""}