{"version":3,"file":"static/js/589.34525dff.chunk.js","mappings":"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","sources":["components/HelmetComp.jsx","components/ProductCard.jsx","components/sections/BreadCrumb.jsx","components/sections/ProductSlider.jsx","components/sections/ProductDetailSect.jsx","pages/ProductDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Parser } from 'html-to-react'\r\n\r\nconst HelmetComp = (props) => {\r\n\r\n    const [siteInfo, setSiteInfo] = useState([]);\r\n\r\n    const getSiteInfo = async () => {\r\n        let result = await fetch(`${process.env.REACT_APP_BASE_URL}siteInfo`);\r\n        result = await result.json();\r\n        if (result.status) {\r\n            setSiteInfo(result.siteInfo);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSiteInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <Helmet>\r\n            <link href={process.env.REACT_APP_BASE_URL + 'images/' + siteInfo.favicon} rel=\"shortcut icon\" type=\"image/png\" />\r\n            {Parser().parse(siteInfo.googleAnalytic)}\r\n            <title>{props.metaData.metaTitle}</title>\r\n            <meta name=\"keywords\" content={props.metaData.metaKeywords} />\r\n            <meta name=\"description\" content={props.metaData.metaDescription} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default HelmetComp\r\n","import React, { useEffect } from 'react';\r\nimport './ProductCard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport BtnLink from './BtnLink';\r\n\r\nconst ProductCard = (props) => {\r\n\r\n  const boxVariant = {\r\n    visible: { opacity: 1, scale: 1, translateX: 0, transition: { duration: 0.4 } },\r\n    hidden: { opacity: 0.25, scale: 0.65, translateX: 180 },\r\n  }\r\n\r\n  const control = useAnimation()\r\n  const [ref, inView] = useInView()\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      control.start(\"visible\");\r\n    }\r\n    else {\r\n      control.start(\"hidden\");\r\n    }\r\n  }, [control, inView]);\r\n\r\n\r\n  return (\r\n    <motion.div\r\n    ref={ref}\r\n    variants={boxVariant}\r\n    initial=\"hidden\"\r\n    animate={control}\r\n    className='product-card'>\r\n    <div className='product-img'><img className='w-100' loading='lazy' src={process.env.REACT_APP_BASE_URL + \"images/icons/\" + props.imgSrc} alt={props.productName} title={props.productName} /></div>\r\n    <div className='product-name-box'>\r\n      <span className='product-name-title' >By Bagophile</span>\r\n      <Link className='product-name' to={props.pdLink}>{props.productName}</Link>\r\n    </div>\r\n  </motion.div>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react';\r\nimport './BreadCrumb.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BreadCrumb = (props) => {\r\n  return (\r\n    <section className='bread-crumb'>\r\n      <div className='container'>\r\n      <h1>{props.name ? props.name : null}</h1>\r\n        <div className='page-title-box'>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><span><i className=\"fa-solid fa-angles-right\"></i></span></li>\r\n                <li><span>{props.name ? props.name : null}</span></li>\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BreadCrumb\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Parser } from 'html-to-react'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n// Import Swiper styles\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar';\r\n// import required modules\r\nimport { Autoplay, Navigation } from 'swiper/modules';\r\n// import ProductCard from '../ProductCard';\r\nimport ProductCard from '../ProductCard';\r\nimport SectionTitle from '../SectionTitle';\r\n\r\nconst ProductSlider = () => {\r\n\r\n  const [products, setProduct] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}products`)\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setProduct(result.products);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <section className='sect-space bg-gry pt-0 '>\r\n        <div className='container'>\r\n          <div className='text-center'>\r\n          </div>\r\n          <div className=' m-t30'>\r\n            <Swiper\r\n              loop={true}\r\n              speed={800}\r\n              autoplay={{\r\n                delay: 3500,\r\n                disableOnInteraction: false,\r\n              }}\r\n          \r\n              breakpoints={{\r\n                240: {\r\n                  slidesPerView: 1,\r\n                  spaceBetween: 10,\r\n                },\r\n                640: {\r\n                  slidesPerView: 2,\r\n                  spaceBetween: 20,\r\n                },\r\n                868: {\r\n                  slidesPerView: 2,\r\n                  spaceBetween: 40,\r\n                },\r\n                1224: {\r\n                  slidesPerView: 4,\r\n                  spaceBetween: 50,\r\n                },\r\n              }}\r\n              modules={[Autoplay, Navigation]}\r\n              className=\"home-slider\">\r\n\r\n              {\r\n                products\r\n                  ?\r\n                  products.map((value, index) =>\r\n                    <SwiperSlide key={index}>\r\n                      <ProductCard\r\n                        productName={value.name}\r\n                        servDesc={Parser().parse(value.description)}\r\n                        servPrice={value.price}\r\n                        servLink={'/' + value.slug}\r\n                        servIcon={value.icon}\r\n                      />\r\n                    </SwiperSlide>\r\n                  )\r\n                  :\r\n                  null\r\n              }\r\n\r\n            </Swiper>\r\n          </div>\r\n        </div>\r\n      </section> */}\r\n      <section className='sect-space bg-gry'>\r\n        <div className='container'>\r\n            <div className='text-center'><SectionTitle  smTitle='Featured Products' mainTitle=\"Cursus quis condimentum nunc ultricies \" /></div>\r\n            <div className=' m-t30'>\r\n            <Swiper\r\n                loop={true}\r\n                speed={1000}\r\n                autoplay={{\r\n                    delay: 6500,\r\n                    disableOnInteraction: false,\r\n                }}\r\n                // navigation={true}\r\n                navigation={{\r\n                    prevEl: '.prev-slide',\r\n                    nextEl: '.next-slide',\r\n                  }}\r\n                  breakpoints={{\r\n                    0: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 15,\r\n                    },\r\n                    640: {\r\n                      slidesPerView: 2,\r\n                      spaceBetween: 20,\r\n                    },\r\n                    868: {\r\n                      slidesPerView: 3,\r\n                      spaceBetween: 40,\r\n                    },\r\n                    1224: {\r\n                      slidesPerView: 4,\r\n                      spaceBetween: 50,\r\n                    },\r\n                  }}\r\n                modules={[Autoplay , Navigation]}\r\n                className=\"home-slider\">\r\n                  {\r\n                products\r\n                  ?\r\n                  products.map((value, index) =>\r\n                    <SwiperSlide key={index}>\r\n                      <ProductCard  \r\n                        productName={value.name}\r\n                        imgSrc={value.img}\r\n                        pdLink={'/' + value.slug}\r\n                       />\r\n                      {/* <ProductCard\r\n                        productName={value.name}\r\n                        servDesc={Parser().parse(value.description)}\r\n                        servPrice={value.price}\r\n                        servLink={'/' + value.slug}\r\n                        servIcon={value.icon}\r\n                      /> */}\r\n                    </SwiperSlide>\r\n                  )\r\n                  :\r\n                  null\r\n              }\r\n              \r\n            </Swiper>\r\n            </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductSlider\r\n","import {React , useState , useEffect} from 'react';\r\nimport SectionTitle from '../SectionTitle';\r\n// import LoremIpsum from 'react-lorem-ipsum';\r\n// Import Swiper React components\r\n// import { Swiper, SwiperSlide } from 'swiper/react';\r\n// Import Swiper styles\r\n// import 'swiper/css';\r\n// import 'swiper/css/free-mode';\r\n// import 'swiper/css/navigation';\r\n// import 'swiper/css/thumbs';\r\n// import required modules\r\n// import { FreeMode, Navigation, Thumbs } from 'swiper/modules';\r\n// import { motion, useAnimation } from \"framer-motion\";\r\n// import { useInView } from \"react-intersection-observer\";\r\nimport { Parser } from 'html-to-react'\r\n\r\nconst ProductDetailSect = (props) => {\r\n    // const boxVariant = {\r\n    //     visible: { opacity: 1, scale: 1,  transition: {duration: 0.325} },\r\n    //     hidden: { opacity: 0.45, scale: 0.75 },\r\n    //   }\r\n    \r\n    //   const control = useAnimation()\r\n    //   const [ref, inView] = useInView()\r\n    \r\n    //   useEffect(() => {\r\n    //     if (inView) {\r\n    //       control.start(\"visible\");\r\n    //     }\r\n    //     else {\r\n    //       control.start(\"hidden\");\r\n    //     }\r\n    //   }, [control, inView]);\r\n    // const [thumbsSwiper, setThumbsSwiper] = useState();\r\n    return (\r\n        <>\r\n         <section className='sect-space'>\r\n            <div className='container'>\r\n                <div className=''>\r\n                    <div  className='floated-pd'>\r\n                        <img className='w-100' src={process.env.REACT_APP_BASE_URL + \"images/products/\" + props.product.img} alt={props.product.name} title={props.product.name} />\r\n                    </div>\r\n                    <SectionTitle smTitle=\"Product Details\" mainTitle={props.product.shortDescription} />\r\n                            {Parser().parse(props.product.description)}\r\n                            {Parser().parse(props.product.extraDescription)}\r\n                </div>\r\n            </div>\r\n        </section>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetailSect\r\n","import React, { useEffect, useState } from 'react'\r\nimport Nav from '../components/nav/Nav';\r\nimport BreadCrumb from '../components/sections/BreadCrumb'\r\nimport ProductDetailSect from '../components/sections/ProductDetailSect'\r\nimport ProductSlider from '../components/sections/ProductSlider';\r\nimport ContactSect from '../components/sections/ContactSect'\r\nimport HelmetComp from '../components/HelmetComp';\r\nimport Footer from '../components/sections/Footer';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProductDetail = (props) => {\r\n\r\n  const [product, setProduct] = useState([]);\r\n  const param = useParams();\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, [param]);\r\n\r\n  const getProduct = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}product/${props.slug}`);\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setProduct(result.product);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HelmetComp metaData={product}></HelmetComp>\r\n      <Nav />\r\n      <BreadCrumb name={product.name} />\r\n      <ProductDetailSect product={product} />\r\n      <ProductSlider />\r\n      <ContactSect />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductDetail\r\n"],"names":["props","siteInfo","setSiteInfo","useState","useEffect","async","result","fetch","concat","process","json","status","getSiteInfo","_jsxs","Helmet","children","_jsx","href","favicon","rel","type","Parser","parse","googleAnalytic","metaData","metaTitle","name","content","metaKeywords","metaDescription","control","useAnimation","ref","inView","useInView","start","motion","div","variants","visible","opacity","scale","translateX","transition","duration","hidden","initial","animate","className","loading","src","imgSrc","alt","productName","title","Link","to","pdLink","ProductSlider","products","setProduct","getProducts","_Fragment","SectionTitle","smTitle","mainTitle","Swiper","loop","speed","autoplay","delay","disableOnInteraction","navigation","prevEl","nextEl","breakpoints","slidesPerView","spaceBetween","modules","Autoplay","Navigation","map","value","index","SwiperSlide","ProductCard","img","slug","product","shortDescription","description","extraDescription","param","useParams","getProduct","HelmetComp","Nav","BreadCrumb","ProductDetailSect","ContactSect","Footer"],"sourceRoot":""}