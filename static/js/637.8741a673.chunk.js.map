{"version":3,"file":"static/js/637.8741a673.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/FacebookOutlined.js","../node_modules/@mui/icons-material/ForwardToInbox.js","../node_modules/@mui/icons-material/Instagram.js","../node_modules/@mui/icons-material/LinkedIn.js","../node_modules/@mui/icons-material/PermPhoneMsg.js","../node_modules/@mui/icons-material/PhoneForwarded.js","../node_modules/@mui/icons-material/Share.js","../node_modules/@mui/icons-material/Subscriptions.js","../node_modules/@mui/icons-material/WhatsApp.js","../node_modules/@mui/icons-material/X.js","../node_modules/react-scroll-to-top/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-scroll-to-top/src/index.tsx","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12c0 4.84 3.44 8.87 8 9.8V15H8v-3h2V9.5C10 7.57 11.57 6 13.5 6H16v3h-2c-.55 0-1 .45-1 1v2h3v3h-3v6.95c5.05-.5 9-4.76 9-9.95z\"\n}), 'FacebookOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9v-2H4V8l8 5 8-5v5h2V6c0-1.1-.9-2-2-2m-8 7L4 6h16zm7 4 4 4-4 4v-3h-4v-2h4z\"\n}), 'ForwardToInbox');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.8 2h8.4C19.4 2 22 4.6 22 7.8v8.4a5.8 5.8 0 0 1-5.8 5.8H7.8C4.6 22 2 19.4 2 16.2V7.8A5.8 5.8 0 0 1 7.8 2m-.2 2A3.6 3.6 0 0 0 4 7.6v8.8C4 18.39 5.61 20 7.6 20h8.8a3.6 3.6 0 0 0 3.6-3.6V7.6C20 5.61 18.39 4 16.4 4H7.6m9.65 1.5a1.25 1.25 0 0 1 1.25 1.25A1.25 1.25 0 0 1 17.25 8 1.25 1.25 0 0 1 16 6.75a1.25 1.25 0 0 1 1.25-1.25M12 7a5 5 0 0 1 5 5 5 5 0 0 1-5 5 5 5 0 0 1-5-5 5 5 0 0 1 5-5m0 2a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"\n}), 'Instagram');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z\"\n}), 'LinkedIn');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1M12 3v10l3-3h6V3z\"\n}), 'PermPhoneMsg');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m18 11 5-5-5-5v3h-4v4h4zm2 4.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.28-.26.36-.65.25-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1\"\n}), 'PhoneForwarded');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92\"\n}), 'Share');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 8H4V6h16zm-2-6H6v2h12zm4 10v8c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2v-8c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2m-6 4-6-3.27v6.53z\"\n}), 'Subscriptions');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.75 13.96c.25.13.41.2.46.3.06.11.04.61-.21 1.18-.2.56-1.24 1.1-1.7 1.12-.46.02-.47.36-2.96-.73-2.49-1.09-3.99-3.75-4.11-3.92-.12-.17-.96-1.38-.92-2.61.05-1.22.69-1.8.95-2.04.24-.26.51-.29.68-.26h.47c.15 0 .36-.06.55.45l.69 1.87c.06.13.1.28.01.44l-.27.41-.39.42c-.12.12-.26.25-.12.5.12.26.62 1.09 1.32 1.78.91.88 1.71 1.17 1.95 1.3.24.14.39.12.54-.04l.81-.94c.19-.25.35-.19.58-.11l1.67.88M12 2a10 10 0 0 1 10 10 10 10 0 0 1-10 10c-1.97 0-3.8-.57-5.35-1.55L2 22l1.55-4.65A9.969 9.969 0 0 1 2 12 10 10 0 0 1 12 2m0 2a8 8 0 0 0-8 8c0 1.72.54 3.31 1.46 4.61L4.5 19.5l2.89-.96A7.95 7.95 0 0 0 12 20a8 8 0 0 0 8-8 8 8 0 0 0-8-8z\"\n}), 'WhatsApp');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z\"\n}), 'X');","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\n\ntype Props = React.ComponentPropsWithoutRef<\"button\"> & {\n  top?: number;\n  smooth?: boolean;\n  svgPath?: string;\n  viewBox?: string;\n  component?: any;\n  width?: string;\n  height?: string;\n};\n\nfunction scrollToTop(smooth: boolean = false) {\n  if (smooth) {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  } else {\n    document.documentElement.scrollTop = 0;\n  }\n}\n\nconst ScrollToTop = ({\n  top = 20,\n  className = \"\",\n  color = \"black\",\n  smooth = false,\n  component = \"\",\n  viewBox = \"0 0 256 256\",\n  svgPath = \"M222.138,91.475l-89.6-89.6c-2.5-2.5-6.551-2.5-9.051,0l-89.6,89.6c-2.5,2.5-2.5,6.551,0,9.051s6.744,2.5,9.244,0L122,21.85  V249.6c0,3.535,2.466,6.4,6,6.4s6-2.865,6-6.4V21.85l78.881,78.676c1.25,1.25,2.992,1.875,4.629,1.875s3.326-0.625,4.576-1.875  C224.586,98.025,224.638,93.975,222.138,91.475z\",\n  width = \"28\",\n  height = \"28\",\n  ...props\n}: Props) => {\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setVisible(document.documentElement.scrollTop >= top);\n    };\n    onScroll();\n    document.addEventListener(\"scroll\", onScroll);\n    return () => document.removeEventListener(\"scroll\", onScroll);\n  }, [top]);\n\n  return (\n    <>\n      {visible && (\n        <button\n          className={`scroll-to-top ${className}`}\n          onClick={() => scrollToTop(smooth)}\n          aria-label=\"Scroll to top\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...props}\n        >\n          {component || (\n            <svg width={width} height={height} fill={color} viewBox={viewBox}>\n              <path d={svgPath} />\n            </svg>\n          )}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default ScrollToTop;\n","import { invariant } from '../../utils/errors.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (key) => startsAsVariableToken(key) && singleCssVariableRegex.test(key);\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.5\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","e","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","WeakMap","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_a","_b","top","_c","className","_d","color","_e","smooth","_f","component","_g","viewBox","_h","svgPath","_j","width","_k","height","props","__rest","_l","React","useState","visible","setVisible","useEffect","onScroll","documentElement","scrollTop","addEventListener","removeEventListener","React__default","Fragment","__assign","onClick","window","scrollTo","behavior","scrollToTop","fill","animationControls","hasMounted","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","invariant","animations","forEach","push","animateVisualElement","Promise","all","setValues","stop","values","value","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","_ref","b","c","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","isEasingArray","reverseEasing","backInOut","mirrorEasing","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","length","x1","y1","x2","y2","undefined","hueToRgb","q","mixLinearColor","from","to","v","fromExpo","expo","sqrt","colorTypes","hex","rgba","hsla","asRGBA","find","test","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","mixImmediate","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","key","origin","target","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","pipe","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","warning","mix","mixer","interpolate","input","clamp","isClamp","arguments","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","min","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","secondsToMilliseconds","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","frame","cancelFrame","now","frameData","isProcessing","time","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","percent","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","cancel","play","then","reject","newTime","newSpeed","pause","complete","sample","supportsWaapi","callback","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","animation","element","keyframeOptions","animate","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","isNone","isZeroValueString","animateMotionValue","transition","valueTransition","getValueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getAnimatableNone","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","MotionGlobalConfig","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","getProps","acceleratedAnimation","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionEnd","makeTargetAnimatable","willChange","getValue","animationTypeState","animationState","getState","valueTarget","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","canSkip","shouldReduceMotion","isWillChangeMotionValue","remove","setTarget","animateVariant","variant","resolved","resolveVariant","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","resolvedDefinition","camelToDash","isKeyframesTarget","_delay","acos","Queue","constructor","this","order","scheduled","process","index","indexOf","clear","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","useManualTiming","performance","keepAlive","immediate","requestAnimationFrame","clearTime","queueMicrotask","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","name","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","postRender","render","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","rotateZ","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","scrollLeft","body","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","match","exec","parseCSSVariable","getPropertyValue","trimmed","isNumericalString","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","getCurrent","currentValues","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","matchedValues","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","transformer","createUnitType","endsWith","observerMap","RootIds","rootId","unsupportedValue","optionsToId","fallbackInView","bounds","intersectionRatio","boundingClientRect","intersectionRect","rootBounds","observer","elements","thresholds","trackVisibility","createObserver","callbacks","disconnect","useInView","triggerOnce","skip","initialInView","setRef","React2","setState","entryTarget","previousEntryTarget"],"sourceRoot":""}