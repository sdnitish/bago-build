{"version":3,"file":"static/js/377.14866030.chunk.js","mappings":"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","sources":["components/HelmetComp.jsx","components/MarketBtn.jsx","components/sections/BreadCrumb.jsx","components/sections/SitemapSect.jsx","pages/Sitemap.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Parser } from 'html-to-react'\r\n\r\nconst HelmetComp = (props) => {\r\n\r\n    const [siteInfo, setSiteInfo] = useState([]);\r\n\r\n    const getSiteInfo = async () => {\r\n        let result = await fetch(`${process.env.REACT_APP_BASE_URL}siteInfo`);\r\n        result = await result.json();\r\n        if (result.status) {\r\n            setSiteInfo(result.siteInfo);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSiteInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <Helmet>\r\n            <link href={process.env.REACT_APP_BASE_URL + 'images/' + siteInfo.favicon} rel=\"shortcut icon\" type=\"image/png\" />\r\n            {Parser().parse(siteInfo.googleAnalytic)}\r\n            <title>{props.metaData.metaTitle}</title>\r\n            <meta name=\"keywords\" content={props.metaData.metaKeywords} />\r\n            <meta name=\"description\" content={props.metaData.metaDescription} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default HelmetComp\r\n","import React , {useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst MarketBtn = (props) => {\r\n  const boxVariant = {\r\n    visible: { opacity: 1, scale: 1,  transition: {duration: 0.325} },\r\n    hidden: { opacity: 0.45, scale: 0.75 },\r\n  }\r\n\r\n  const control = useAnimation()\r\n  const [ref, inView] = useInView()\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      control.start(\"visible\");\r\n    }\r\n    else {\r\n      control.start(\"hidden\");\r\n    }\r\n  }, [control, inView]);\r\n\r\n  return (\r\n    <motion.div \r\n    ref={ref}\r\n    variants={boxVariant}\r\n    initial=\"hidden\"\r\n    animate={control}\r\n    >\r\n      <Link className={props.addClass  + ' ' + 'thm-btn w-100 text-center market-btn'} to={props.Href}>{props.locationName} </Link>\r\n    </motion.div >\r\n  )\r\n}\r\n\r\nexport default MarketBtn\r\n","import React from 'react';\r\nimport './BreadCrumb.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BreadCrumb = (props) => {\r\n  return (\r\n    <section className='bread-crumb'>\r\n      <div className='container'>\r\n      <h1>{props.name ? props.name : null}</h1>\r\n        <div className='page-title-box'>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><span><i className=\"fa-solid fa-angles-right\"></i></span></li>\r\n                <li><span>{props.name ? props.name : null}</span></li>\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BreadCrumb\r\n","import React, { useState, useEffect } from 'react';\r\nimport SectionTitle from '../SectionTitle';\r\nimport MarketBtn from '../MarketBtn';\r\n\r\nconst SitemapSect = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <section className='sect-space p-t30'>\r\n        <div className='container'>\r\n          {/* <div className='text-center'><SectionTitle smTitle='Marketplace' mainTitle=\"Cursus quis condimentum nunc ultricies \" /></div> */}\r\n          {/* <div className='row m-t30'>\r\n                <div className='col-lg-4 col-md-6 m-b20'><MarketBtn Href='' locationName='Market Heading' /></div>\r\n                <div className='col-lg-4 col-md-6 m-b20'><MarketBtn Href='' locationName='Market Heading' /></div>\r\n                <div className='col-lg-4 col-md-6 m-b20'><MarketBtn Href='' locationName='Market Heading' /></div>\r\n            </div> */}\r\n          <div className='row m-t30'>\r\n            {\r\n              props.sitemapData\r\n                ?\r\n                props.sitemapData.map((value, index) =>\r\n                  <div key={index} className='col-lg-3 col-md-4 col-sm-6 m-b20'><MarketBtn Href={'/' + value.slug} locationName={value.name} />\r\n                  </div>\r\n                )\r\n                :\r\n                null\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SitemapSect\r\n","import React, { useState, useEffect } from 'react';\r\nimport Nav from '../components/nav/Nav';\r\nimport BreadCrumb from '../components/sections/BreadCrumb'\r\nimport SitemapSect from '../components/sections/SitemapSect'\r\nimport ContactSect from '../components/sections/ContactSect'\r\nimport HelmetComp from '../components/HelmetComp';\r\nimport Footer from '../components/sections/Footer';\r\n\r\nconst Sitemap = () => {\r\n\r\n  const [sitemaps, setSitemaps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPages();\r\n  },[]);\r\n\r\n  const getPages = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}sitemaps`)\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setSitemaps(result.sitemaps);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HelmetComp metaData={sitemaps} />\r\n      <Nav />\r\n      <BreadCrumb name=\"Sitemap\" />\r\n      <SitemapSect sitemapData={sitemaps} />\r\n      <ContactSect />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sitemap\r\n"],"names":["props","siteInfo","setSiteInfo","useState","useEffect","async","result","fetch","concat","process","json","status","getSiteInfo","_jsxs","Helmet","children","_jsx","href","favicon","rel","type","Parser","parse","googleAnalytic","metaData","metaTitle","name","content","metaKeywords","metaDescription","control","useAnimation","ref","inView","useInView","start","motion","div","variants","visible","opacity","scale","transition","duration","hidden","initial","animate","Link","className","addClass","to","Href","locationName","_Fragment","sitemapData","map","value","index","MarketBtn","slug","Sitemap","sitemaps","setSitemaps","getPages","HelmetComp","Nav","BreadCrumb","SitemapSect","ContactSect","Footer"],"sourceRoot":""}