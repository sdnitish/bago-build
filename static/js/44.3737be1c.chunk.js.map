{"version":3,"file":"static/js/44.3737be1c.chunk.js","mappings":"8LAOA,MAoCA,EApCqBA,IAEnB,MAKMC,GAAUC,EAAAA,EAAAA,MACTC,EAAKC,IAAUC,EAAAA,EAAAA,MAYtB,OAVAC,EAAAA,EAAAA,YAAU,KACJF,EACFH,EAAQM,MAAM,WAGdN,EAAQM,MAAM,SAChB,GACC,CAACN,EAASG,KAIXI,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACXP,IAAKA,EACLQ,SArBiB,CACjBC,QAAS,CAAEC,QAAS,EAAGC,MAAO,EAAGC,WAAY,EAAGC,WAAY,CAAEC,SAAU,KACxEC,OAAQ,CAAEL,QAAS,IAAMC,MAAO,IAAMC,WAAY,MAoBlDI,QAAQ,SACRC,QAASnB,EACToB,UAAU,eAAcC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAACC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAQG,QAAQ,OAAOC,IAAKC,sCAAmD1B,EAAM2B,OAAQC,IAAK5B,EAAM6B,YAAaC,MAAO9B,EAAM6B,iBAC9KrB,EAAAA,EAAAA,MAAA,OAAKa,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,qBAAoBC,SAAE,kBACtCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACV,UAAU,eAAeW,GAAIhC,EAAMiC,OAAOX,SAAEtB,EAAM6B,mBAE/C,C,0JCzBf,MA6IA,EA7IsBK,KAEpB,MAAOC,EAAUC,IAAcC,EAAAA,EAAAA,UAAS,KAExC/B,EAAAA,EAAAA,YAAU,KACRgC,GAAa,GACZ,IAEH,MAAMA,EAAcC,UAClB,IAAIC,QAAeC,MAAM,GAADC,OAAIhB,yBAA8B,aAC1Dc,QAAeA,EAAOG,OAClBH,EAAOI,QACTR,EAAWI,EAAOL,SACpB,EAGF,OACEZ,EAAAA,EAAAA,KAAAsB,EAAAA,SAAA,CAAAvB,UAyDEC,EAAAA,EAAAA,KAAA,WAASF,UAAU,oBAAmBC,UACpCd,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAACC,EAAAA,EAAAA,KAACuB,EAAAA,EAAY,CAAEC,QAAQ,oBAAoBC,UAAU,+CAClFzB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACvBC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CACHC,MAAM,EACNC,MAAO,IACPC,SAAU,CACNC,MAAO,KACPC,sBAAsB,GAG1BC,WAAY,CACRC,OAAQ,cACRC,OAAQ,eAEVC,YAAa,CACX,EAAG,CACDC,cAAe,EACfC,aAAc,IAEhB,IAAK,CACHD,cAAe,EACfC,aAAc,IAEhB,IAAK,CACHD,cAAe,EACfC,aAAc,IAEhB,KAAM,CACJD,cAAe,EACfC,aAAc,KAGpBC,QAAS,CAACC,EAAAA,GAAWC,EAAAA,IACrB1C,UAAU,cAAaC,SAEvBa,EAEEA,EAAS6B,KAAI,CAACC,EAAOC,KACnB3C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAW,CAAA7C,UACVC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAW,CACVvC,YAAaoC,EAAMI,KACnB1C,OAAQsC,EAAMK,IACdrC,OAAQ,IAAMgC,EAAMM,QAJNL,KAgBpB,eAOX,C","sources":["components/ProductCard.jsx","components/sections/ProductSlider.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './ProductCard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport BtnLink from './BtnLink';\r\n\r\nconst ProductCard = (props) => {\r\n\r\n  const boxVariant = {\r\n    visible: { opacity: 1, scale: 1, translateX: 0, transition: { duration: 0.4 } },\r\n    hidden: { opacity: 0.25, scale: 0.65, translateX: 180 },\r\n  }\r\n\r\n  const control = useAnimation()\r\n  const [ref, inView] = useInView()\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      control.start(\"visible\");\r\n    }\r\n    else {\r\n      control.start(\"hidden\");\r\n    }\r\n  }, [control, inView]);\r\n\r\n\r\n  return (\r\n    <motion.div\r\n    ref={ref}\r\n    variants={boxVariant}\r\n    initial=\"hidden\"\r\n    animate={control}\r\n    className='product-card'>\r\n    <div className='product-img'><img className='w-100' loading='lazy' src={process.env.REACT_APP_BASE_URL + \"images/icons/\" + props.imgSrc} alt={props.productName} title={props.productName} /></div>\r\n    <div className='product-name-box'>\r\n      <span className='product-name-title' >By Bagophile</span>\r\n      <Link className='product-name' to={props.pdLink}>{props.productName}</Link>\r\n    </div>\r\n  </motion.div>\r\n  )\r\n}\r\n\r\nexport default ProductCard\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Parser } from 'html-to-react'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n// Import Swiper styles\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar';\r\n// import required modules\r\nimport { Autoplay, Navigation } from 'swiper/modules';\r\n// import ProductCard from '../ProductCard';\r\nimport ProductCard from '../ProductCard';\r\nimport SectionTitle from '../SectionTitle';\r\n\r\nconst ProductSlider = () => {\r\n\r\n  const [products, setProduct] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_BASE_URL}products`)\r\n    result = await result.json();\r\n    if (result.status) {\r\n      setProduct(result.products);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <section className='sect-space bg-gry pt-0 '>\r\n        <div className='container'>\r\n          <div className='text-center'>\r\n          </div>\r\n          <div className=' m-t30'>\r\n            <Swiper\r\n              loop={true}\r\n              speed={800}\r\n              autoplay={{\r\n                delay: 3500,\r\n                disableOnInteraction: false,\r\n              }}\r\n          \r\n              breakpoints={{\r\n                240: {\r\n                  slidesPerView: 1,\r\n                  spaceBetween: 10,\r\n                },\r\n                640: {\r\n                  slidesPerView: 2,\r\n                  spaceBetween: 20,\r\n                },\r\n                868: {\r\n                  slidesPerView: 2,\r\n                  spaceBetween: 40,\r\n                },\r\n                1224: {\r\n                  slidesPerView: 4,\r\n                  spaceBetween: 50,\r\n                },\r\n              }}\r\n              modules={[Autoplay, Navigation]}\r\n              className=\"home-slider\">\r\n\r\n              {\r\n                products\r\n                  ?\r\n                  products.map((value, index) =>\r\n                    <SwiperSlide key={index}>\r\n                      <ProductCard\r\n                        productName={value.name}\r\n                        servDesc={Parser().parse(value.description)}\r\n                        servPrice={value.price}\r\n                        servLink={'/' + value.slug}\r\n                        servIcon={value.icon}\r\n                      />\r\n                    </SwiperSlide>\r\n                  )\r\n                  :\r\n                  null\r\n              }\r\n\r\n            </Swiper>\r\n          </div>\r\n        </div>\r\n      </section> */}\r\n      <section className='sect-space bg-gry'>\r\n        <div className='container'>\r\n            <div className='text-center'><SectionTitle  smTitle='Featured Products' mainTitle=\"Cursus quis condimentum nunc ultricies \" /></div>\r\n            <div className=' m-t30'>\r\n            <Swiper\r\n                loop={true}\r\n                speed={1000}\r\n                autoplay={{\r\n                    delay: 6500,\r\n                    disableOnInteraction: false,\r\n                }}\r\n                // navigation={true}\r\n                navigation={{\r\n                    prevEl: '.prev-slide',\r\n                    nextEl: '.next-slide',\r\n                  }}\r\n                  breakpoints={{\r\n                    0: {\r\n                      slidesPerView: 1,\r\n                      spaceBetween: 15,\r\n                    },\r\n                    640: {\r\n                      slidesPerView: 2,\r\n                      spaceBetween: 20,\r\n                    },\r\n                    868: {\r\n                      slidesPerView: 3,\r\n                      spaceBetween: 40,\r\n                    },\r\n                    1224: {\r\n                      slidesPerView: 4,\r\n                      spaceBetween: 50,\r\n                    },\r\n                  }}\r\n                modules={[Autoplay , Navigation]}\r\n                className=\"home-slider\">\r\n                  {\r\n                products\r\n                  ?\r\n                  products.map((value, index) =>\r\n                    <SwiperSlide key={index}>\r\n                      <ProductCard  \r\n                        productName={value.name}\r\n                        imgSrc={value.img}\r\n                        pdLink={'/' + value.slug}\r\n                       />\r\n                      {/* <ProductCard\r\n                        productName={value.name}\r\n                        servDesc={Parser().parse(value.description)}\r\n                        servPrice={value.price}\r\n                        servLink={'/' + value.slug}\r\n                        servIcon={value.icon}\r\n                      /> */}\r\n                    </SwiperSlide>\r\n                  )\r\n                  :\r\n                  null\r\n              }\r\n              \r\n            </Swiper>\r\n            </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductSlider\r\n"],"names":["props","control","useAnimation","ref","inView","useInView","useEffect","start","_jsxs","motion","div","variants","visible","opacity","scale","translateX","transition","duration","hidden","initial","animate","className","children","_jsx","loading","src","process","imgSrc","alt","productName","title","Link","to","pdLink","ProductSlider","products","setProduct","useState","getProducts","async","result","fetch","concat","json","status","_Fragment","SectionTitle","smTitle","mainTitle","Swiper","loop","speed","autoplay","delay","disableOnInteraction","navigation","prevEl","nextEl","breakpoints","slidesPerView","spaceBetween","modules","Autoplay","Navigation","map","value","index","SwiperSlide","ProductCard","name","img","slug"],"sourceRoot":""}